// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String       @id @default(uuid())
  name            String       @db.VarChar(254)
  email           String?      @db.VarChar(254)
  login           String       @unique @db.VarChar(128)
  password        String       @db.VarChar(128)
  cpf             String       @unique @db.VarChar(14)
  is_super        Boolean      @default(false)
  is_worker       Boolean      @default(false)
  is_active       Boolean      @default(true)
  is_first_access Boolean      @default(true)
  created_at      DateTime     @default(now())
  profile         Image?
  token           Token?
  modules         ModuleUser[]

  @@map("users")
}

model Category {
  id         String           @id @default(uuid())
  name       String           @db.VarChar(200)
  created_at DateTime         @default(now())
  modules    ModuleCategory[]

  @@map("categories")
}

model Module {
  id         String           @id @default(uuid())
  name       String           @db.VarChar(200)
  created_at DateTime         @default(now())
  users      ModuleUser[]
  categories ModuleCategory[]

  @@map("modules")
}

model Year {
  id   String @id @default(uuid())
  year String @unique @db.VarChar(10)

  @@map("years")
}

model Month {
  id    String @id @default(uuid())
  name  String @unique @db.VarChar(30)
  month Int    @unique @db.Integer

  @@map("months")
}

model Image {
  id         String   @id @default(uuid())
  name       String   @db.VarChar(200)
  size       Int      @db.Integer()
  url        String   @db.VarChar(200)
  key        String   @unique @db.VarChar(200)
  created_at DateTime @default(now())
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    String   @unique

  @@map("images")
}

model Token {
  id         String   @id @default(uuid())
  token      String   @db.VarChar(200)
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    String   @unique
  created_at DateTime @default(now())

  @@map("token")
}

model ModuleUser {
  id         String   @id @default(uuid())
  created_at DateTime @default(now())
  module     Module   @relation(fields: [module_id], references: [id], onDelete: Cascade)
  module_id  String
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    String

  @@map("module_user")
}

model ModuleCategory {
  id          String   @id @default(uuid())
  created_at  DateTime @default(now())
  module      Module   @relation(fields: [module_id], references: [id], onDelete: Cascade)
  module_id   String
  category    Category @relation(fields: [category_id], references: [id], onDelete: Cascade)
  category_id String

  @@map("module_category")
}
